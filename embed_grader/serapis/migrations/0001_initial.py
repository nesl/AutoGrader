# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-09-20 20:14
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('release_time', models.DateTimeField()),
                ('deadline', models.DateTimeField()),
                ('problem_statement', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('num_testbeds', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brief_description', models.CharField(blank=True, max_length=100, null=True)),
                ('mode', models.IntegerField(choices=[(0, 'Debug'), (1, 'Public'), (2, 'Feedback'), (3, 'Hidden')])),
                ('points', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('execution_duration', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('grading_script', models.FileField(upload_to='AssignmentTask_grading_script')),
                ('assignment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentTaskFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='AssignmentTaskFile_file')),
                ('assignment_task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.AssignmentTask')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentTaskFileSchema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=100)),
                ('assignment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('year', models.IntegerField()),
                ('quarter', models.IntegerField(choices=[(0, 'Winter'), (1, 'Spring'), (2, 'Summer'), (3, 'Fall')])),
            ],
            options={
                'permissions': (('view_course', 'View course'), ('modify_course', 'Modify course'), ('create_course', 'Create course'), ('view_membership', 'View membership'), ('create_assignment', 'Create assignment'), ('view_assignment', 'View assignment'), ('modify_assignment', 'Modify assignment')),
            },
        ),
        migrations.CreateModel(
            name='CourseUserList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, 'Super user'), (10, 'Instructor'), (11, 'TA'), (12, 'Grader'), (20, 'Student')])),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Course')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HardwareDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='HardwareType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('pinout', models.FileField(upload_to='HardwareType_pinout')),
                ('link_to_manual', models.URLField(null=True)),
                ('hardware_role', models.IntegerField(choices=[(0, 'Hardware Engine'), (1, 'Device Under Test')])),
            ],
            options={
                'permissions': (('view_hardware_type', 'View hardware type'),),
            },
        ),
        migrations.CreateModel(
            name='HardwareTypePin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin_name', models.CharField(max_length=10)),
                ('hardware_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.HardwareType')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_time', models.DateTimeField()),
                ('grading_result', models.FloatField()),
                ('status', models.IntegerField(choices=[(0, 'Received'), (10, 'Grading'), (11, 'Rejudging'), (20, 'Result is ready')], default=0)),
                ('task_scope', models.IntegerField()),
                ('assignment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Assignment')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='SubmissionFile_file')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionFileSchema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=100)),
                ('assignment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='TaskGradingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grading_status', models.IntegerField(choices=[(0, 'Pending'), (10, 'Executing'), (100, 'Checking output'), (110, 'Finished'), (-1, 'Please contact PI'), (-2, 'Skipped')], default=0)),
                ('execution_status', models.IntegerField(choices=[(-1, "Haven't executed yet"), (0, 'Successful execution'), (1, 'Segmentation fault')], default=((-1, "Haven't executed yet"), (0, 'Successful execution'), (1, 'Segmentation fault')))),
                ('status_update_time', models.DateTimeField()),
                ('points', models.FloatField(default=0.0)),
                ('grading_detail', models.FileField(blank=True, null=True, upload_to='TaskGradingStatus_grading_detail')),
                ('assignment_task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.AssignmentTask')),
                ('submission_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Submission')),
            ],
        ),
        migrations.CreateModel(
            name='TaskGradingStatusFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='TaskGradingStatusFile_file')),
            ],
        ),
        migrations.CreateModel(
            name='TaskGradingStatusFileSchema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=100)),
                ('assignment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Testbed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=25, unique=True)),
                ('grading_deadline', models.DateTimeField()),
                ('status', models.IntegerField(choices=[(1, 'Available'), (2, 'Busy'), (-1, 'Offline')])),
                ('report_time', models.DateTimeField()),
                ('report_status', models.IntegerField(choices=[(1, 'Available'), (2, 'Busy'), (-2, 'Unknown')])),
                ('secret_code', models.CharField(max_length=100)),
                ('task_being_graded', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='serapis.TaskGradingStatus')),
            ],
        ),
        migrations.CreateModel(
            name='TestbedHardwareList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardware_index', models.IntegerField()),
                ('firmware', models.FileField(blank=True, null=True, upload_to='TestbedHardwareList_firmware')),
                ('hardware_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.HardwareType')),
            ],
        ),
        migrations.CreateModel(
            name='TestbedType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestbedTypeWiring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dev_1_index', models.IntegerField()),
                ('dev_2_index', models.IntegerField()),
                ('dev_1_pin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dev_1_pin', to='serapis.HardwareTypePin')),
                ('dev_2_pin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dev_2_pin', to='serapis.HardwareTypePin')),
                ('testbed_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.TestbedType')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=20, unique=True, verbose_name='University ID')),
                ('activation_key', models.CharField(blank=True, max_length=40, null=True)),
                ('key_expires', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='testbedhardwarelist',
            name='testbed_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.TestbedType'),
        ),
        migrations.AddField(
            model_name='testbed',
            name='testbed_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.TestbedType'),
        ),
        migrations.AddField(
            model_name='taskgradingstatusfile',
            name='file_schema_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.TaskGradingStatusFileSchema'),
        ),
        migrations.AddField(
            model_name='taskgradingstatusfile',
            name='task_grading_status_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.TaskGradingStatus'),
        ),
        migrations.AddField(
            model_name='submissionfile',
            name='file_schema_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.SubmissionFileSchema'),
        ),
        migrations.AddField(
            model_name='submissionfile',
            name='submission_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Submission'),
        ),
        migrations.AddField(
            model_name='hardwaredevice',
            name='hardware_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.HardwareType'),
        ),
        migrations.AddField(
            model_name='hardwaredevice',
            name='testbed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Testbed'),
        ),
        migrations.AddField(
            model_name='assignmenttaskfile',
            name='file_schema_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.AssignmentTaskFileSchema'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='course_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serapis.Course'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='testbed_type_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='serapis.TestbedType'),
        ),
        migrations.AlterUniqueTogether(
            name='taskgradingstatusfileschema',
            unique_together=set([('assignment_id', 'field')]),
        ),
        migrations.AlterUniqueTogether(
            name='taskgradingstatusfile',
            unique_together=set([('task_grading_status_id', 'file_schema_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='taskgradingstatus',
            unique_together=set([('submission_id', 'assignment_task_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='submissionfileschema',
            unique_together=set([('assignment_id', 'field')]),
        ),
        migrations.AlterUniqueTogether(
            name='submissionfile',
            unique_together=set([('submission_id', 'file_schema_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseuserlist',
            unique_together=set([('course_id', 'user_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='assignmenttaskfileschema',
            unique_together=set([('assignment_id', 'field')]),
        ),
        migrations.AlterUniqueTogether(
            name='assignmenttaskfile',
            unique_together=set([('assignment_task_id', 'file_schema_id')]),
        ),
    ]
